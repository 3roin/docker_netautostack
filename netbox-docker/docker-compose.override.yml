version: '3.9'
services:

  # netbox
  netbox:
    networks:
      - stack_network
    ports:
      - 80:8080
  netbox-worker:
    networks:
      - stack_network
  netbox-housekeeping:
    networks:
      - stack_network

  # postgres
  postgres:
    networks:
      - stack_network

  # redis
  redis:
    networks:
      - stack_network
  redis-cache:
    networks:
      - stack_network

  # portainer
  portainer-agent:
    image: portainer/agent:2.14.0-alpine
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker/volumes:/var/lib/docker/volumes
    networks:
      - stack_network
    deploy:
      mode: global
      placement:
        constraints: [node.platform.os == linux]
  portainer-server:
    image: portainer/portainer-ce:2.14.0-alpine
    command: -H tcp://tasks.portainer-agent:9001 --tlsskipverify
    ports:
      - "9443:9443"
      - "9000:9000"
      - "8000:8000"
    volumes:
      - type: bind
        source: /mnt/portainer/data
        target: /data
    networks:
      - stack_network
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints: [node.role == manager]

  # docker-socket-proxy
  dsp-agent:
    image: tecnativa/docker-socket-proxy
#    user: root
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - LOG_LEVEL=debug
      ## Variables match the URL prefix
      # 0 to revoke access.
      # 1 to grant access.
      ## Granted by Default
      - EVENTS=1
      - PING=1
      - VERSION=1
      ## Revoked by Default
      # Security critical
      - AUTH=0
      - SECRETS=0
      - POST=1
      - DELETE=1
      # GET Optons
      - BUILD=0
      - COMMIT=0
      - CONFIGS=0
      - CONTAINERS=1
      - DISTRIBUTION=0
      - EXEC=1
      - IMAGES=1
      - INFO=1
      - NETWORKS=1
      - NODES=1
      - PLUGINS=0
      - SERVICES=1
      - SESSION=0
      - SWARM=1
      - SYSTEM=0
      - TASKS=1
      - VOLUMES=1
      # POST Options
      - CONTAINERS_CREATE=1
      - CONTAINERS_START=1
      - CONTAINERS_UPDATE=1
      # DELETE Options
      - CONTAINERS_DELETE=1
      - IMAGES_DELETE=1
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - stack_network
    deploy:
      mode: global
      placement:
        constraints: [node.platform.os == linux]    

  # jenkins
  jenkins-server:
    image: 3roin/jenkins:v0.1
    user: root
    volumes:
      - type: bind
        source: /mnt/jenkins/jenkins-data
        target: /var/jenkins_home
    ports:
      - "8080:8080"
      - "50000:50000"
    networks:
      - stack_network
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints: [node.role == manager]
    healthcheck:
      test: ["CMD-SHELL", "curl -sS http://localhost:8080/login || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5

networks:
  stack_network:
    driver: overlay
    attachable: true
